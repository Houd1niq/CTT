import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import styles from './Admin.module.scss';
import { Button } from '@shared/ui/Button/Button';
import { Input } from '@shared/ui/Input/Input';

interface Employee {
  id: number;
  email: string;
  fullName: string;
  role: string;
  institute: string;
}

const institutes = [
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç –º–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏—è',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç –≥—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã—Ö –Ω–∞—É–∫',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç —Ö–∏–º–∏–∏ –∏ —Ö–∏–º–∏—á–µ—Å–∫–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
  '–ò–Ω—Å—Ç–∏—Ç—É—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏',
];

const Admin: React.FC = () => {
  const [employees, setEmployees] = useState<Employee[]>([]);
  const [newEmployee, setNewEmployee] = useState({
    email: '',
    fullName: '',
    role: '',
    institute: '',
    password: '',
    confirmPassword: '',
  });
  const [showPassword, setShowPassword] = useState(false);
  const [showConfirmPassword, setShowConfirmPassword] = useState(false);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setNewEmployee(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (newEmployee.password !== newEmployee.confirmPassword) {
      alert('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
      return;
    }
    // TODO: Add API call to create employee
    setEmployees(prev => [...prev, { ...newEmployee, id: Date.now() }]);
    setNewEmployee({ 
      email: '', 
      fullName: '', 
      role: '', 
      institute: '',
      password: '',
      confirmPassword: '',
    });
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  const toggleConfirmPasswordVisibility = () => {
    setShowConfirmPassword(!showConfirmPassword);
  };

  return (
    <div className={styles.adminPage}>
      <div className={styles.pageHeader}>
        <Link to="/" className={styles.backLink}>
          –ù–∞ –≥–ª–∞–≤–Ω—É—é
        </Link>
        <h1>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏</h1>
      </div>
      
      <div className={styles.adminContent}>
        <div className={styles.addEmployeeForm}>
          <h2>–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</h2>
          <form onSubmit={handleSubmit}>
            <div className={styles.formContent}>
              <Input
                title="Email"
                type="email"
                name="email"
                value={newEmployee.email}
                onChange={handleInputChange}
                required
              />

              <Input
                title="–§–ò–û"
                type="text"
                name="fullName"
                value={newEmployee.fullName}
                onChange={handleInputChange}
                required
              />

              <div className={styles.formGroup}>
                <label htmlFor="role">–†–æ–ª—å:</label>
                <select
                  id="role"
                  name="role"
                  value={newEmployee.role}
                  onChange={handleInputChange}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å</option>
                  <option value="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</option>
                  <option value="manager">–ú–µ–Ω–µ–¥–∂–µ—Ä</option>
                  <option value="user">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</option>
                </select>
              </div>

              <div className={styles.formGroup}>
                <label htmlFor="institute">–ò–Ω—Å—Ç–∏—Ç—É—Ç:</label>
                <select
                  id="institute"
                  name="institute"
                  value={newEmployee.institute}
                  onChange={handleInputChange}
                  required
                >
                  <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç</option>
                  {institutes.map((institute) => (
                    <option key={institute} value={institute}>
                      {institute}
                    </option>
                  ))}
                </select>
              </div>

              <div className={styles.passwordGroup}>
                <Input
                  title="–ü–∞—Ä–æ–ª—å"
                  type={showPassword ? "text" : "password"}
                  name="password"
                  value={newEmployee.password}
                  onChange={handleInputChange}
                  required
                />
                <button
                  type="button"
                  className={styles.passwordToggle}
                  onClick={togglePasswordVisibility}
                >
                  {showPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è"}
                </button>
              </div>

              <div className={styles.passwordGroup}>
                <Input
                  title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è"
                  type={showConfirmPassword ? "text" : "password"}
                  name="confirmPassword"
                  value={newEmployee.confirmPassword}
                  onChange={handleInputChange}
                  required
                />
                <button
                  type="button"
                  className={styles.passwordToggle}
                  onClick={toggleConfirmPasswordVisibility}
                >
                  {showConfirmPassword ? "üëÅÔ∏è" : "üëÅÔ∏è‚Äçüó®Ô∏è"}
                </button>
              </div>
            </div>

            <Button type="submit" className={styles.submitButton}>
              –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            </Button>
          </form>
        </div>

        <div className={styles.employeesList}>
          <h2>–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤</h2>
          <table className={styles.table}>
            <thead>
              <tr>
                <th className={styles.tableHeader}>ID</th>
                <th className={styles.tableHeader}>Email</th>
                <th className={styles.tableHeader}>–§–ò–û</th>
                <th className={styles.tableHeader}>–†–æ–ª—å</th>
                <th className={styles.tableHeader}>–ò–Ω—Å—Ç–∏—Ç—É—Ç</th>
                <th className={styles.tableHeader}>–î–µ–π—Å—Ç–≤–∏—è</th>
              </tr>
            </thead>
            <tbody>
              {employees.map(employee => (
                <tr key={employee.id}>
                  <td>{employee.id}</td>
                  <td>{employee.email}</td>
                  <td>{employee.fullName}</td>
                  <td>{employee.role}</td>
                  <td>{employee.institute}</td>
                  <td className={styles.actionsCell}>
                    <Button 
                      onClick={() => {/* TODO: Add edit functionality */}}
                      className={styles.editButton}
                    >
                      –ò–∑–º–µ–Ω–∏—Ç—å
                    </Button>
                    <Button 
                      onClick={() => {/* TODO: Add delete functionality */}}
                      className={styles.deleteButton}
                    >
                      –£–¥–∞–ª–∏—Ç—å
                    </Button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default Admin; 